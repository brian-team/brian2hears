.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_online_computation.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_online_computation.py:


Online computation
------------------
Example of online computation using :meth:`~brian2hears.Filterbank.process`.
Plots the RMS value of each channel output by a gammatone filterbank.



.. image:: /auto_examples/images/sphx_glr_online_computation_001.png
    :alt: online computation
    :class: sphx-glr-single-img






.. code-block:: default

    from brian2 import *
    from brian2hears import *

    sound1 = tone(1*kHz, .1*second)
    sound2 = whitenoise(.1*second)

    sound = sound1+sound2
    sound = sound.ramp()

    sound.level = 60*dB

    cf = erbspace(20*Hz, 20*kHz, 3000)
    fb = Gammatone(sound, cf)

    def sum_of_squares(input, running):
        return running+sum(input**2, axis=0)

    rms = sqrt(fb.process(sum_of_squares)/sound.nsamples)

    sound_rms = sqrt(mean(sound**2))

    axhline(sound_rms, ls='--')
    plot(cf, rms)
    xlabel('Frequency (Hz)')
    ylabel('RMS')
    show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.538 seconds)


.. _sphx_glr_download_auto_examples_online_computation.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: online_computation.py <online_computation.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: online_computation.ipynb <online_computation.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
